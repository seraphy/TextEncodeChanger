<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>jp.seraphyware</groupId>
    <artifactId>TextEncodeChanger</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>TextEncodeChanger</name>

    <description>
        文字コード変換のGUIツール.
        (JavaFX8 + Spring4 + Log4j2 の組み合わせの技術習得を兼ねて作成した.)

        任意のフォルダを走査し,指定したパターンに合致する名前のテキストファイルを
        読み込み,その文字コードを推定し,テーブルに結果を一覧表示する.
        その後,テーブルで必要なファイルを選択し,指定した文字コードで変換して保存する.

        NetBeans8のプロジェクトである.
        実行およびビルドにはJava8が必要である.
    </description>

    <url>https://github.com/seraphy/TextEncodeChanger.git</url>

    <organization>
        <name>seraphyware.jp</name>
        <url>https://github.com/seraphy</url>
    </organization>

    <scm>
        <connection>scm:git:https://github.com/seraphy/TextEncodeChanger.git</connection>
        <developerConnection>scm:git:https://github.com/seraphy/TextEncodeChanger.git</developerConnection>
        <tag>HEAD</tag>
        <url>https://github.com/seraphy/TextEncodeChanger</url>
    </scm>

    <!-- 継続的インテグレーションシステム -->
    <ciManagement>
        <system>travis-ci</system>
        <url>https://travis-ci.org/seraphy/TextEncodeChanger</url>
    </ciManagement>

    <!-- 課題追跡システム -->
    <issueManagement>
        <url>https://github.com/seraphy/TextEncodeChanger/issues</url>
        <system>GitHub Issues</system>
    </issueManagement>

    <developers>
        <developer>
            <id>seraphy</id>
            <name>seraphy</name>
            <email>seraphy@users.sourceforge.jp</email>
            <url>http://sourceforge.jp/users/seraphy/</url>
        </developer>
    </developers>

    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <mainClass>jp.seraphyware.textencodechanger.MainApp</mainClass>
    </properties>

    <build>
        <plugins>
            <!-- java8によるビルド -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.2</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <compilerArgument>-Xlint:all</compilerArgument>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>2.4</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.10.1</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.8.2</version>
            </plugin>

            <!-- 単体テスト有効 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.16</version>
            </plugin>

            <!--
                パッケージ時, 単一の実行可能jarを作成するために依存ライブラリを展開する.
                packageフェーズでmakejarのexecutionよりも先行させる必要がある.(pom上で前に書けば良い)
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.10</version>
                <executions>
                    <execution>
                        <id>unpack-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <excludeScope>system</excludeScope>
                            <excludeGroupIds>junit,org.mockito,org.hamcrest</excludeGroupIds>
                            <outputDirectory>${project.build.directory}/classes</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- パッケージ時, 単一の実行可能jarを作成する -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.3.2</version>
                <executions>
                    <execution>
                        <id>makejar</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${java.home}/../bin/javapackager</executable>
                            <arguments>
                                <argument>-createjar</argument>
                                <argument>-nocss2bin</argument>
                                <argument>-appclass</argument>
                                <argument>${mainClass}</argument>
                                <argument>-srcdir</argument>
                                <argument>${project.build.directory}/classes</argument>
                                <argument>-outdir</argument>
                                <argument>${project.build.directory}</argument>
                                <argument>-outfile</argument>
                                <argument>${project.build.finalName}.jar</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>  
            </plugin>

            <!-- CheckStyleプラグイン -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>2.14</version>
                <dependencies>
                    <!-- Java8のラムダ式を正しい文法と認識できるバージョンを指定する -->
                    <dependency>
                        <groupId>com.puppycrawl.tools</groupId>
                        <artifactId>checkstyle</artifactId>
                        <version>6.3</version>
                    </dependency>
                </dependencies>
            </plugin>

            <!-- findbugsプラグイン 3.0以降はjava8に対応済み -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <version>3.0.0</version>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <!--
          ControlsFX
          http://fxexperience.com/controlsfx/
        -->
        <dependency>
            <groupId>org.controlsfx</groupId>
            <artifactId>controlsfx</artifactId>
            <version>8.20.8</version>
        </dependency>

        <!-- SPRING FRAMEWORK 4.1 (DI) -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>4.1.4.RELEASE</version>
            <exclusions>
                <exclusion>
                    <!-- Commons-Loggingのかわりに, SLF4Jを使うため -->
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- SLF4j -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.10</version>
        </dependency>

        <!-- Commons-LoggingをSLF4Jで置き換える -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>1.7.10</version>
            <scope>runtime</scope>
        </dependency>

        <!-- SLF4Jのログ実装をLog4j2にする -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <version>2.1</version>
            <exclusions>
                <exclusion>
                    <!-- 参照しているslf4j-api ver1.7.10を外す -->
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- LOG4J2 -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>2.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>2.1</version>
        </dependency>

        <!-- TestNG -->
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>6.8.1</version>
            <scope>test</scope>
        </dependency>

        <!-- SpringTest -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>4.1.4.RELEASE</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <reporting>
        <plugins>
            <!-- プロジェクト情報の出力 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>2.8</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <!--
                            java8のクラスの依存関係をチェックすると警告が大量に発生する.
                            機能はするようだ. (2015/2/25現在)
                            <report>dependencies</report>
                            <report>dependency-convergence</report>
                            <report>dependency-management</report>
                            -->
                            <report>index</report>
                            <report>summary</report>
                            <report>license</report>
                            <report>scm</report>
                            <report>cim</report>
                            <report>issue-tracking</report>
                            <report>project-team</report>
                            <!-- リーリングリスト
                            <report>mailing-list</report>
                            -->
                            <report>plugin-management</report>
                            <report>plugins</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <!-- JAVADOC -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.10.1</version>
                <reportSets>
                    <reportSet>
                        <!--
                          本体側JAVADOCのみ生成 
                          UnitTest側は作成しない.
                          (生成できるがビルド時に警告がたくさんでる)
                        -->
                        <id>html</id>
                        <configuration>
                            <doctitle>My API for ${project.name} ${project.version}</doctitle>
                            <windowtitle>My API for ${project.name} ${project.version}</windowtitle>
                        </configuration>
                        <reports>
                            <report>javadoc</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <!-- テストレポート -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>2.18.1</version>
            </plugin>
            <!--
                CheckStyleの設定.
                NewlineAtEndOfFileがうざいので, *.java, *.propertiesに対して,
                suppressions.xmlで除外指定している.
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>2.14</version>
                <configuration>
                    <suppressionsLocation>suppressions.xml</suppressionsLocation>
                    <configLocation>config/sun_checks.xml</configLocation>
                </configuration>
            </plugin>
            <!-- findbugs -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <version>3.0.0</version>
                <configuration>
                    <effort>Max</effort>
                    <xmlOutput>true</xmlOutput>
                </configuration>
            </plugin>
            <!-- PMD/CPD -->
            <plugin>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>3.4</version>
                <configuration>
                    <targetJdk>${maven.compiler.target}</targetJdk>
                </configuration>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>pmd</report>
                            <report>cpd</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
        </plugins>
    </reporting>

</project>
