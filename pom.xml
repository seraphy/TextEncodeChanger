<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>jp.seraphyware</groupId>
    <artifactId>TextReEncoder</artifactId>
    <version>1.6-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>TextReEncoder</name>

    <properties>
        <java.version>1.8</java.version>
        <start-class>jp.seraphyware.textencodechanger.Main</start-class>
        <exeFileVersion>1.6.0.0</exeFileVersion>
        <!-- SpringBoot2.1.3の標準のlog4j2のバージョンを上書きする -->
        <log4j2.version>2.17.1</log4j2.version>
    </properties>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.3.RELEASE</version>
    </parent>

    <description><![CDATA[
        これはJavaFX8によるGUIの「テキストファイル文字コード変換ツール」です。
        (JavaFX8 + Spring4 + Log4j2 の組み合わせの技術習得を兼ねて作成した。)

        任意のフォルダを走査し、指定したパターンに合致する名前のテキストファイルを
        読み込み、その文字コードを推定し、テーブルに結果を一覧表示します。
        その後、テーブルで必要なファイルを選択し、指定した文字コードで変換して保存します。

        NetBeans8のプロジェクトです。
        GUIのデザインにはScene Builder2を使用しています。
        実行およびビルドにはJava8が必要です。
        
        ---
        2019/3/16 [v1.6] Spring-BootによるJavaFX11を同梱したUberJar生成に切り替え。
                
        2019/1/11 [v1.5] Java8, Java11のビルドをProfileで切り替え
        Maven Wrapper導入
        Launch4jのカスタムヘッド使用

        2018/10 Java11に対応。
        Maven3.5.4でビルド

    ]]></description>

    <url>https://github.com/seraphy/TextReEncoder.git</url>

    <organization>
        <name>seraphyware.jp</name>
        <url>https://github.com/seraphy</url>
    </organization>

    <scm>
        <connection>scm:git:https://github.com/seraphy/TextReEncoder.git</connection>
        <developerConnection>scm:git:https://github.com/seraphy/TextReEncoder.git</developerConnection>
        <tag>HEAD</tag>
        <url>https://github.com/seraphy/TextReEncoder</url>
    </scm>

    <!-- 継続的インテグレーションシステム -->
    <ciManagement>
        <system>travis-ci</system>
        <url>https://travis-ci.org/seraphy/TextReEncoder</url>
    </ciManagement>

    <!-- 課題追跡システム -->
    <issueManagement>
        <url>https://github.com/seraphy/TextReEncoder/issues</url>
        <system>GitHub Issues</system>
    </issueManagement>

    <developers>
        <developer>
            <id>seraphy</id>
            <name>seraphy</name>
            <email>seraphy@users.sourceforge.jp</email>
            <url>http://sourceforge.jp/users/seraphy/</url>
        </developer>
    </developers>

    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>
    
    <build>
        <plugins>
            <!-- SPRING-BOOT -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <!-- 現在時刻からユニークなビルド番号を生成する
            (使うか否かに関わらず、SCMの設定が必要。
            buildNumberの連番を使う場合はローカルにプロパティファイルが作成される) -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>buildnumber-maven-plugin</artifactId>
                <version>1.4</version>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>create</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <doCheck>false</doCheck>
                    <doUpdate>true</doUpdate>
                    <format>{0,date,yyyyMM}.{0,date,ddHHmm}</format>
                    <items>
                        <item>timestamp</item>
                    </items>
                </configuration>
            </plugin>

            <!-- メインJAR作成時のマニフェストの調整 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifestEntries>
                            <!-- SpringBootのUberJarの場合、メインjarがBOOT-INF/classesの下に配置される -->
                            <SplashScreen-Image>BOOT-INF/classes/splash_picture.png</SplashScreen-Image>
                            <Build-Timestamp>${maven.build.timestamp}</Build-Timestamp>
                            <Built-By>${project.developers[0].id}</Built-By>
                            <Specification-Title>${project.name}</Specification-Title>
                            <Specification-Version>${project.version}</Specification-Version>
                            <Specification-Vendor>${project.organization.name}</Specification-Vendor>
                            <Implementation-Title>${project.name}</Implementation-Title>
                            <Implementation-Version>${project.version}</Implementation-Version>
                            <Implementation-Vendor-Id>${project.organization.name}</Implementation-Vendor-Id>
                            <Implementation-Vendor>${project.organization.name}</Implementation-Vendor>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <!-- SPRING-BOOT -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
            <exclusions>
                <exclusion>
                    <!-- SPRING-BOOTの標準のログ系(logback)を無効にする
                    https://www.logicbig.com/tutorials/spring-framework/spring-boot/log4j2.html
                    -->
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        
        <!-- SPRING-BOOTのログをlog4j2系に切り替える -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-log4j2</artifactId>
        </dependency>

        <!-- JSR330 Support 
        Springは、これを検出すると Inject, Provider, Instanceなどを有効とする -->
        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
            <version>1</version>
        </dependency>

        <!--
          OpenJFX
          https://wiki.openjdk.java.net/display/OpenJFX/Main

          Java11からJavaFXはJREに含まれないため、ライブラリとして組み込み必要がある
        -->
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>11</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-fxml</artifactId>
            <version>11</version>
        </dependency>

        <!--
          ControlsFX
          http://fxexperience.com/controlsfx/
        -->
        <dependency>
            <groupId>org.controlsfx</groupId>
            <artifactId>controlsfx</artifactId>
            <!-- <version>8.20.8</version>
                ※ Java9以降、アクセス不可能になった内部クラスに依存するため
                ControlsFXのSpreadsheetViewなどは削除されている。
                本アプリは使っていないので、9.0.0にしてもJava8,Java11どちらでも問題ない
                https://bitbucket.org/controlsfx/controlsfx/issues/780/controlsfx-should-support-java-9
                https://groups.google.com/d/msg/controlsfx-dev/5pMt_w44VIU/IdU6jC1mDwAJ
            -->
            <version>9.0.0</version>
        </dependency>

        <!-- JSR-250 APIの明示的な組み込み
          https://mvnrepository.com/artifact/javax.annotation/jsr250-api
        -->
        <dependency>
            <groupId>javax.annotation</groupId>
            <artifactId>jsr250-api</artifactId>
            <version>1.0</version>
        </dependency>     

        <!-- SPRING-BOOTのテスト -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>     
    </dependencies>

    <reporting>
        <plugins>
            <!-- findbugsプラグイン 3.0以降はjava8に対応済み
             Java10以降怪しい？ので、しばらく除外
           <plugin>
               <groupId>org.codehaus.mojo</groupId>
               <artifactId>findbugs-maven-plugin</artifactId>
               <version>3.0.5</version>
               <configuration>
                   <xmlOutput>true</xmlOutput>
               </configuration>
           </plugin>
            -->

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>3.0.0</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>checkstyle</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>

            <!-- javadoc生成 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.8</version>
            </plugin>

            <!-- site生成 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <dependencyDetailsEnabled>false</dependencyDetailsEnabled>
                    <dependencyLocationsEnabled>false</dependencyLocationsEnabled>
                </configuration>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>dependencies</report>
                            <report>scm</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
        </plugins>
    </reporting>

    <profiles>
        <profile>
            <id>launch4j</id>
            <activation>
                <os>
                    <family>Windows</family>
                </os>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <!-- Launch4jによるjarファイルのexe化を行う.
                            http://launch4j.sourceforge.net/docs.html
                        -->
                        <groupId>com.akathist.maven.plugins.launch4j</groupId>
                        <artifactId>launch4j-maven-plugin</artifactId>
                        <version>1.7.25</version>
                        <executions>
                            <execution>
                                <id>l4j-gui</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>launch4j</goal>
                                </goals>
                                <configuration>
                                    <headerType>gui</headerType>
                                    <outfile>target/${project.build.finalName}.exe</outfile>
                                    <jar>target/${project.build.finalName}.jar</jar>
                                    <errTitle>Failed to execute the ${project.build.finalName}</errTitle>
                                    <icon>icon.ico</icon>
                                    <!-- JAVA_HOMEがみつからない場合は手動選択できるようにするカスタムヘッド -->
                                    <objs>
                                        <obj>src/Launch4JStub/w32api/crt2.o</obj>
                                        <obj>src/Launch4JStub/head/head.o</obj>
                                        <obj>src/Launch4JStub/head/guihead.o</obj>
                                    </objs>
                                    <libs>
                                        <lib>src/Launch4jStub/w32api/libmingw32.a</lib>
                                        <lib>src/Launch4jStub/w32api/libgcc.a</lib>
                                        <lib>src/Launch4jStub/w32api/libmsvcrt.a</lib>
                                        <lib>src/Launch4jStub/w32api/libkernel32.a</lib>
                                        <lib>src/Launch4jStub/w32api/libuser32.a</lib>
                                        <lib>src/Launch4jStub/w32api/libadvapi32.a</lib>
                                        <lib>src/Launch4jStub/w32api/libshell32.a</lib>
                                    </libs>
                                    <jre>
                                        <path>jre</path>
                                        <minVersion>1.8.0_40</minVersion>
                                    </jre>
                                    <versionInfo>
                                        <fileVersion>${exeFileVersion}</fileVersion>
                                        <txtFileVersion>${project.version}.${buildNumber}</txtFileVersion>
                                        <fileDescription>${project.artifactId} ${project.version} ${buildNumber}</fileDescription>
                                        <copyright><![CDATA[${maven.build.timestamp} ${project.developers[0].id}]]></copyright>
                                        <productVersion>${exeFileVersion}</productVersion>
                                        <txtProductVersion>${project.version}</txtProductVersion>
                                        <productName>${project.artifactId}</productName>
                                        <internalName>${project.artifactId}</internalName>
                                        <originalFilename>${project.artifactId}.exe</originalFilename>
                                    </versionInfo>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
